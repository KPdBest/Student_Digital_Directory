# Generated by Django 2.2.3 on 2019-08-18 13:57

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Directory', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DetailsDatatable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_column='Username', max_length=15)),
                ('password', models.CharField(db_column='Password', max_length=25)),
            ],
            options={
                'db_table': 'Details_datatable',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DetailsDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(db_column='Fname', max_length=100)),
                ('lname', models.CharField(db_column='Lname', max_length=100)),
                ('mobile_no', models.CharField(db_column='Mobile_no', max_length=12)),
                ('email', models.CharField(db_column='Email', max_length=100)),
                ('address', models.CharField(db_column='Address', max_length=500)),
                ('city', models.CharField(db_column='City', max_length=25)),
                ('gender', models.CharField(db_column='Gender', max_length=20)),
                ('highestqualification', models.CharField(db_column='HighestQualification', max_length=25)),
                ('pincode', models.IntegerField(db_column='PinCode')),
                ('school', models.CharField(db_column='School', max_length=50)),
                ('state', models.CharField(db_column='State', max_length=25)),
            ],
            options={
                'db_table': 'Details_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DirectoryBran',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.CharField(db_column='Branch', max_length=100)),
            ],
            options={
                'db_table': 'Directory_bran',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DirectoryCou',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(db_column='Course', max_length=100)),
            ],
            options={
                'db_table': 'Directory_cou',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DirectoryDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_column='Name', max_length=100)),
                ('branch', models.CharField(db_column='Branch', max_length=100)),
                ('libid', models.CharField(db_column='LibID', max_length=25)),
                ('uid', models.CharField(db_column='UID', max_length=25)),
                ('rollno', models.CharField(db_column='RollNo', max_length=25)),
                ('unirollno', models.CharField(db_column='UniRollNo', max_length=25)),
                ('mobile_no', models.CharField(db_column='Mobile_no', max_length=20)),
                ('email', models.CharField(db_column='Email', max_length=100)),
            ],
            options={
                'db_table': 'Directory_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DirectorySec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(db_column='Section', max_length=100)),
            ],
            options={
                'db_table': 'Directory_sec',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DirectorySemes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(db_column='Semester', max_length=100)),
            ],
            options={
                'db_table': 'Directory_semes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayAlbum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artist', models.CharField(max_length=250)),
                ('album_title', models.CharField(max_length=500)),
                ('genre', models.CharField(max_length=100)),
                ('album_logo', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'Play_album',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sections',
            fields=[
                ('section_id', models.AutoField(db_column='Section_id', primary_key=True, serialize=False)),
                ('section', models.CharField(db_column='Section', max_length=45)),
                ('dept_detail', models.IntegerField(blank=True, db_column='Dept_detail', null=True)),
                ('sem_id', models.IntegerField(db_column='Sem_id')),
                ('status', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'sections',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SelectBran',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Select_bran',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SelectCou',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Select_cou',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SelectSec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Select_sec',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SelectSemes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Select_semes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentCourseDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_duration', models.IntegerField(db_column='Course_duration')),
                ('course_id', models.IntegerField(blank=True, db_column='Course_id', null=True)),
                ('course_type', models.IntegerField(blank=True, db_column='Course_type', null=True)),
                ('dept_id', models.IntegerField(blank=True, db_column='Dept_id', null=True)),
                ('capacity', models.IntegerField()),
                ('lateral_capacity', models.IntegerField()),
            ],
            options={
                'db_table': 'Student_course_detail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentDropdown',
            fields=[
                ('sno', models.AutoField(db_column='Sno', primary_key=True, serialize=False)),
                ('pid', models.IntegerField(blank=True, db_column='Pid', null=True)),
                ('field', models.CharField(blank=True, db_column='Field', max_length=500, null=True)),
                ('value', models.CharField(blank=True, db_column='Value', max_length=500, null=True)),
                ('is_edit', models.IntegerField(db_column='Is_Edit')),
                ('is_delete', models.IntegerField(db_column='Is_Delete')),
                ('status', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'Student_Dropdown',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentPrimdetail',
            fields=[
                ('name', models.CharField(db_column='Name', max_length=500)),
                ('batch_from', models.IntegerField(db_column='Batch_from')),
                ('batch_to', models.IntegerField(db_column='Batch_to')),
                ('exam_roll_no', models.CharField(db_column='Exam_Roll_No', max_length=500)),
                ('general_rank', models.IntegerField(blank=True, db_column='General_Rank', null=True)),
                ('category_rank', models.IntegerField(blank=True, db_column='Category_Rank', null=True)),
                ('gen_rank', models.IntegerField(blank=True, db_column='Gen_Rank', null=True)),
                ('uni_roll_no', models.CharField(blank=True, db_column='Uni_Roll_No', max_length=15, null=True)),
                ('join_year', models.IntegerField(db_column='Join_Year')),
                ('email_id', models.CharField(blank=True, db_column='Email_id', max_length=500, null=True)),
                ('date_of_add', models.DateField(db_column='Date_Of_Add')),
                ('uniq_id', models.AutoField(db_column='Uniq_Id', primary_key=True, serialize=False)),
                ('form_fill_status', models.CharField(db_column='Form_Fill_Status', max_length=2)),
                ('fee_waiver', models.CharField(db_column='Fee_Waiver', max_length=41)),
                ('remark', models.CharField(blank=True, max_length=500, null=True)),
                ('admission_category', models.IntegerField(blank=True, db_column='Admission_category', null=True)),
                ('admission_through', models.IntegerField(blank=True, db_column='Admission_through', null=True)),
                ('admission_type', models.IntegerField(blank=True, db_column='Admission_type', null=True)),
                ('dept_detail', models.IntegerField(blank=True, db_column='Dept_detail', null=True)),
                ('exam_type', models.IntegerField(blank=True, db_column='Exam_type', null=True)),
                ('lib_id', models.CharField(blank=True, db_column='Lib_id', max_length=150, null=True)),
                ('stu_type', models.IntegerField(blank=True, db_column='Stu_Type', null=True)),
                ('admission_status', models.IntegerField(blank=True, null=True)),
                ('caste', models.IntegerField(blank=True, db_column='Caste', null=True)),
                ('gender', models.IntegerField(blank=True, db_column='Gender', null=True)),
                ('old_uniq_id', models.CharField(max_length=50)),
                ('remark_detail', models.CharField(blank=True, max_length=500, null=True)),
                ('time_stamp', models.DateTimeField()),
            ],
            options={
                'db_table': 'Student_primdetail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Studentsession1920O',
            fields=[
                ('uniq_id', models.IntegerField(db_column='Uniq_Id', primary_key=True, serialize=False)),
                ('mob', models.BigIntegerField(blank=True, db_column='Mob', null=True)),
                ('fee_status', models.CharField(blank=True, db_column='Fee_Status', max_length=20, null=True)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('class_roll_no', models.IntegerField(blank=True, db_column='Class_Roll_No', null=True)),
                ('registration_status', models.IntegerField(blank=True, db_column='Registration_Status', null=True)),
                ('acc_reg', models.IntegerField(blank=True, db_column='Acc_Reg', null=True)),
                ('att_start_date', models.DateField(blank=True, null=True)),
                ('reg_form_status', models.CharField(max_length=10)),
                ('reg_date_time', models.DateTimeField(blank=True, null=True)),
                ('section_id', models.IntegerField(blank=True, db_column='Section_id', null=True)),
                ('sem_id', models.IntegerField(blank=True, db_column='Sem_id', null=True)),
                ('session', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'studentSession_1920o',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestSudo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(db_column='Fname', max_length=100)),
                ('fa_name', models.CharField(db_column='Fa_Name', max_length=100)),
                ('mobile_no', models.CharField(db_column='Mobile_no', max_length=100)),
                ('fa_mobile_no', models.CharField(db_column='Fa_Mobile_no', max_length=100)),
                ('email', models.CharField(db_column='Email', max_length=100)),
                ('gender', models.CharField(db_column='Gender', max_length=20)),
            ],
            options={
                'db_table': 'Test_sudo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TestUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(db_column='Email', max_length=100)),
                ('password', models.CharField(db_column='Password', max_length=100)),
            ],
            options={
                'db_table': 'Test_user',
                'managed': False,
            },
        ),
        migrations.RemoveField(
            model_name='bran',
            name='linkA',
        ),
        migrations.DeleteModel(
            name='Details',
        ),
        migrations.RemoveField(
            model_name='sec',
            name='linkC',
        ),
        migrations.RemoveField(
            model_name='semes',
            name='linkB',
        ),
        migrations.DeleteModel(
            name='Bran',
        ),
        migrations.DeleteModel(
            name='Cou',
        ),
        migrations.DeleteModel(
            name='Sec',
        ),
        migrations.DeleteModel(
            name='Semes',
        ),
    ]
